{
    "portfolio": {
        "Level Access": {
            "Full Stack Developer": "<ul><li>Enhanced <strong>MongoDB</strong> query performance by 90% for a collection containing 700 million entries by using indexable fields and creating new compound indexes</li><li>Optimized the website scanning process, increasing capacity from 1,000 to 10,000 pages by optimizing memory consumption with <strong>Redis</strong> and ensuring fail-safe resumption with atomicity</li><li>Overhauled the logging architecture and established <strong>Datadog</strong> pipelines to analyze millions of logs, reducing response time to client support tickets by 30%</li><li>Developed a <strong>RESTful API</strong> with <strong>Typescript</strong>, <strong>Angular</strong>, and <strong>Express</strong>, allowing staff to upload large data volumes and schedule tasks, reducing customersâ€™ onboarding time by 1 hour on average</li><li>Restructured the reporting architecture using microservices and <strong>RabbitMQ</strong>, reducing dashboard response times from 30 seconds to under 1 second and automating report generation and deletion tasks in response to data changes</li><li>Implemented <strong>MongoDB pipelines</strong> to aggregate data from multiple collections, reducing database queries and system memory usage by 30%</li></ul>"
        },
        "Red Canari": {
            "Software Developer & Hacker (Co-op)": "<ul><li>Developed a web-based tool that generates customized reports based on dynamic report schemas, using <strong>React</strong>, <strong>Couch/PouchDB (NoSQL)</strong>, and <strong>Spring Reactive</strong></li><li>Assembled a proxy database for runtime datatype analysis and version controlling through hooks, which uncovered over 40 data integrity issues/bugs</li><li>Collaborated with the CEO and the marketing director to promote the reporting tool by providing technical support and presenting use cases</li></ul>"
        },
        "Ericsson": {
            "Python Developer (Co-op)": "<ul><li>Auto-generated over 30 pages of Network Entities APIs by creating Excel sheets, graphs and Json Schemas from datasets</li><li>Performed load tests that support up to 50GB of data, aggregated results, and identified scaling bottlenecks</li><li>Created Python scripts to validate Json Schemas against network entities fetched from <strong>Kubernetes</strong>, which found over 5000+ instances of structural-inconsistences</li></ul>",
            "Full Stack Developer (Co-op)": "<ul><li>Developed a proxy server written in <strong>Typescript</strong>, <strong>Angular</strong>, <strong>PostgresDB</strong>, and <strong>Spring Boot</strong>, responsible for network data version control and transformation</li><li>Facilitated network simulation by leading development of a service using <strong>Java</strong> to batch process and feed data to 5G network labs, saving 15% of network testing costs</li><li>Refactored and enhanced Nginx and <strong>Docker</strong> configuration files to enable remote deployment on Windows and Linux</li></ul>"
        },
        "Kinaxis": {
            "Software Developer Data Server (Co-op)": "<ul><li>Led development of a website written in <strong>Javascript</strong>, <strong>Vue</strong>, <strong>Express</strong>, and <strong>SQLite</strong> which fetches datasets from the <strong>Elastic Stack</strong> endpoints and generates graphs for a dashboard</li><li>Automated REST test using <strong>Mocha</strong> and <strong>Chai</strong></li></ul>"
        },
        "Carleton University": {
            "Software Developer (Co-op)": "<ul><li>Implemented a program in <strong>Java</strong> that allows transferable datasets used for machine learning between <strong>DL4J</strong> and <strong>Keras</strong> frameworks</li><li>Redesigned <em>Java Learning by Observation Framework</em>, increasing speed, scalability, and extensibility</li></ul>"
        },
        "Math Latin Input": "<ul><li>Designed the creation of a <strong>TypeScript-Vue</strong> application designed for physics and linguists to write symbols unavailable on standard keyboards efficiently. </li><li>Engineered an algorithm utilizing a <strong>B+ Tree</strong> and a directed graph data structure, achieving live search weighing over 10000+ symbol entries in under 5ms.</li>",
        "Linux Tutorials": "Wrote Linux tutorials as a goal to teach the general public about Linux, and also to improve my technical writing skills",
        "Chess Learning Program": {
            "Lead Developer": "My very first project designed to help people learn chess and chess openings. Coded in <strong>Java</strong> with a group of 2 people"
        },
        "This Website": "Coded in <strong>Vue</strong> and <strong>Typescript</strong>",
        "Carleton Code Gym": {
            "Club Director": "<ul><li>Provided lessons on <strong>Git</strong>, <strong>Docker</strong>, <strong>Linux</strong>, <strong>Bash</strong>, multi-threading, data structures and algorithms</li><li>Directed a programming education platform that improved the knowledge of software design practices and scalable algorithms to over 60 students</li></ul>"
        },
        "Piano": {
            "title": "Piano",
            "description": "Been playing for 10+ years"
        },
        "Volleyball": {
            "title": "Volleyball",
            "description": "Role: Spiker"
        }
    }
}